{"ast":null,"code":"var _jsxFileName = \"/home/akhil/Seema_work/expense-tracker-react/src/Contexts/ExpenseTrackerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { v4 } from \"uuid\";\nimport useLocalStorage from \"../CustomHooks/useLocalStorage\";\n\n/*\r\n1) using Contect API here\r\n2) Using uuid to provide unique ID to budget card and unique IDs to the budget's expenses\r\n3) using useLocalStorage as a custom hook to store budgets and expenses of budgets in browser's local storage\r\n4) using custom hook useExpenseTracker and importing it to use directly\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseTrackerContext = /*#__PURE__*/React.createContext();\nexport function useExpenseTracker() {\n  _s();\n  return useContext(ExpenseTrackerContext);\n}\n_s(useExpenseTracker, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n;\n\n// exporting ExpenseTrackerProvider to index.js to hydrate it inside App.js \nexport const ExpenseTrackerProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  //all the budgets with budgetID,budget Name, and max amout for the budget\n  const [budgets, setBudgets] = useLocalStorage(\"budgets\", []);\n  //all the respective budgets's expeses with own Unique ID,budgetID,description of expenseand amount of the expense\n  const [expenses, setExpenses] = useLocalStorage(\"expenses\", []);\n\n  // function for all the expense for the perticular budget ,tracking with budget ID\n  const allExpensesForABudget = budgetId => {\n    return expenses.filter(exp => exp.budgetId === budgetId);\n  };\n\n  /*\r\n  Addind budget with providing unique id to it and giving budget name and max amount for the budget\r\n  */\n  const addBudget = (budgetName, max) => {\n    setBudgets(prevBudgets => {\n      if (prevBudgets.find(budget => budget.budgetName === budgetName)) {\n        return prevBudgets;\n      }\n      return [...prevBudgets, {\n        id: v4(),\n        budgetName,\n        max\n      }];\n    });\n  };\n\n  /*\r\n   Addind Expense with providing unique id to it, giving budget Id so that it can track specific budget,description of a expense and amount for the budget\r\n   */\n  const addExpense = _ref2 => {\n    let {\n      description,\n      amount,\n      budgetId\n    } = _ref2;\n    setExpenses(prevExpenses => {\n      return [...prevExpenses, {\n        id: v4(),\n        description,\n        amount,\n        budgetId\n      }];\n    });\n  };\n\n  //deleting budget as well as expenses related to it\n  const deleteBudget = _ref3 => {\n    let {\n      id\n    } = _ref3;\n    setExpenses(prevExpenses => {\n      return prevExpenses.filter(expense => expense.budgetId !== id);\n    });\n    setBudgets(prevBudgets => {\n      return prevBudgets.filter(budget => budget.id !== id);\n    });\n  };\n\n  //deleteing the specific expense for the budget\n  const deleteExpense = _ref4 => {\n    let {\n      id\n    } = _ref4;\n    setExpenses(prevExpenses => {\n      return prevExpenses.filter(expense => expense.id !== id);\n    });\n  };\n\n  //returning the Provider with all the above values inside the child that will bes hydrated to the App.js \n  return /*#__PURE__*/_jsxDEV(ExpenseTrackerContext.Provider, {\n    value: {\n      budgets,\n      expenses,\n      allExpensesForABudget,\n      addBudget,\n      addExpense,\n      deleteBudget,\n      deleteExpense\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s2(ExpenseTrackerProvider, \"J7E4d7guQZ/gp2cZLJi5v6QwLyA=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n_c = ExpenseTrackerProvider;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTrackerProvider\");","map":{"version":3,"names":["React","useContext","v4","useLocalStorage","ExpenseTrackerContext","createContext","useExpenseTracker","ExpenseTrackerProvider","children","budgets","setBudgets","expenses","setExpenses","allExpensesForABudget","budgetId","filter","exp","addBudget","budgetName","max","prevBudgets","find","budget","id","addExpense","description","amount","prevExpenses","deleteBudget","expense","deleteExpense"],"sources":["/home/akhil/Seema_work/expense-tracker-react/src/Contexts/ExpenseTrackerContext.js"],"sourcesContent":["\r\nimport React, { useContext } from \"react\";\r\nimport {v4} from \"uuid\"\r\nimport useLocalStorage from \"../CustomHooks/useLocalStorage\";\r\n\r\n/*\r\n1) using Contect API here\r\n2) Using uuid to provide unique ID to budget card and unique IDs to the budget's expenses\r\n3) using useLocalStorage as a custom hook to store budgets and expenses of budgets in browser's local storage\r\n4) using custom hook useExpenseTracker and importing it to use directly\r\n*/\r\n\r\n\r\nconst ExpenseTrackerContext = React.createContext()\r\n\r\nexport function useExpenseTracker(){\r\n\r\n    return useContext(ExpenseTrackerContext)\r\n\r\n};\r\n\r\n\r\n// exporting ExpenseTrackerProvider to index.js to hydrate it inside App.js \r\nexport const ExpenseTrackerProvider=({children}) =>{\r\n\r\n    //all the budgets with budgetID,budget Name, and max amout for the budget\r\n    const [budgets, setBudgets] = useLocalStorage(\"budgets\", []);\r\n    //all the respective budgets's expeses with own Unique ID,budgetID,description of expenseand amount of the expense\r\n    const [expenses, setExpenses] = useLocalStorage(\"expenses\", []);\r\n\r\n        // function for all the expense for the perticular budget ,tracking with budget ID\r\n     const allExpensesForABudget =(budgetId)=>{\r\n        return expenses.filter(exp => exp.budgetId === budgetId)\r\n     };\r\n\r\n     /*\r\n     Addind budget with providing unique id to it and giving budget name and max amount for the budget\r\n     */\r\n   const addBudget =(budgetName, max)=>{\r\n    setBudgets(prevBudgets=>{\r\n        if (prevBudgets.find(budget=> budget.budgetName === budgetName)) {\r\n            return prevBudgets;\r\n        }\r\n        return [...prevBudgets,{id: v4(), budgetName, max}]\r\n    })\r\n   }\r\n\r\n    /*\r\n     Addind Expense with providing unique id to it, giving budget Id so that it can track specific budget,description of a expense and amount for the budget\r\n     */\r\n    const  addExpense = ({description,amount,budgetId})=>{\r\n        setExpenses(prevExpenses=>{\r\n            return [...prevExpenses,{id: v4(), description, amount, budgetId}]\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    //deleting budget as well as expenses related to it\r\n   const  deleteBudget =({id})=>{\r\n    setExpenses(prevExpenses=>{\r\n        return prevExpenses.filter(expense=>expense.budgetId !== id)\r\n    })\r\n    setBudgets(prevBudgets=>{\r\n        return prevBudgets.filter(budget => budget.id !== id)\r\n    })\r\n   }\r\n\r\n\r\n\r\n    //deleteing the specific expense for the budget\r\n    const deleteExpense =({id})=>{\r\n        setExpenses(prevExpenses=>{\r\n            return prevExpenses.filter(expense => expense.id !== id)\r\n        })\r\n    }\r\n\r\n\r\n    //returning the Provider with all the above values inside the child that will bes hydrated to the App.js \r\n    return (\r\n        <ExpenseTrackerContext.Provider value={{\r\n            budgets,\r\n            expenses,\r\n            allExpensesForABudget,\r\n            addBudget,\r\n            addExpense,\r\n            deleteBudget,\r\n            deleteExpense,\r\n        }} >\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    )\r\n}"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAAQC,EAAE,QAAO,MAAM;AACvB,OAAOC,eAAe,MAAM,gCAAgC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AALA;AAQA,MAAMC,qBAAqB,gBAAGJ,KAAK,CAACK,aAAa,EAAE;AAEnD,OAAO,SAASC,iBAAiB,GAAE;EAAA;EAE/B,OAAOL,UAAU,CAACG,qBAAqB,CAAC;AAE5C;AAAC,GAJeE,iBAAiB;AAIhC;;AAGD;AACA,OAAO,MAAMC,sBAAsB,GAAC,QAAe;EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC;EAE3C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC;EAC5D;EACA,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,eAAe,CAAC,UAAU,EAAE,EAAE,CAAC;;EAE3D;EACH,MAAMU,qBAAqB,GAAGC,QAAQ,IAAG;IACtC,OAAOH,QAAQ,CAACI,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACF,QAAQ,KAAKA,QAAQ,CAAC;EAC3D,CAAC;;EAED;AACL;AACA;EACG,MAAMG,SAAS,GAAE,CAACC,UAAU,EAAEC,GAAG,KAAG;IACnCT,UAAU,CAACU,WAAW,IAAE;MACpB,IAAIA,WAAW,CAACC,IAAI,CAACC,MAAM,IAAGA,MAAM,CAACJ,UAAU,KAAKA,UAAU,CAAC,EAAE;QAC7D,OAAOE,WAAW;MACtB;MACA,OAAO,CAAC,GAAGA,WAAW,EAAC;QAACG,EAAE,EAAErB,EAAE,EAAE;QAAEgB,UAAU;QAAEC;MAAG,CAAC,CAAC;IACvD,CAAC,CAAC;EACH,CAAC;;EAEA;AACJ;AACA;EACI,MAAOK,UAAU,GAAG,SAAiC;IAAA,IAAhC;MAACC,WAAW;MAACC,MAAM;MAACZ;IAAQ,CAAC;IAC9CF,WAAW,CAACe,YAAY,IAAE;MACtB,OAAO,CAAC,GAAGA,YAAY,EAAC;QAACJ,EAAE,EAAErB,EAAE,EAAE;QAAEuB,WAAW;QAAEC,MAAM;QAAEZ;MAAQ,CAAC,CAAC;IACtE,CAAC,CAAC;EACN,CAAC;;EAKD;EACD,MAAOc,YAAY,GAAE,SAAQ;IAAA,IAAP;MAACL;IAAE,CAAC;IACzBX,WAAW,CAACe,YAAY,IAAE;MACtB,OAAOA,YAAY,CAACZ,MAAM,CAACc,OAAO,IAAEA,OAAO,CAACf,QAAQ,KAAKS,EAAE,CAAC;IAChE,CAAC,CAAC;IACFb,UAAU,CAACU,WAAW,IAAE;MACpB,OAAOA,WAAW,CAACL,MAAM,CAACO,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKA,EAAE,CAAC;IACzD,CAAC,CAAC;EACH,CAAC;;EAIA;EACA,MAAMO,aAAa,GAAE,SAAQ;IAAA,IAAP;MAACP;IAAE,CAAC;IACtBX,WAAW,CAACe,YAAY,IAAE;MACtB,OAAOA,YAAY,CAACZ,MAAM,CAACc,OAAO,IAAIA,OAAO,CAACN,EAAE,KAAKA,EAAE,CAAC;IAC5D,CAAC,CAAC;EACN,CAAC;;EAGD;EACA,oBACI,QAAC,qBAAqB,CAAC,QAAQ;IAAC,KAAK,EAAE;MACnCd,OAAO;MACPE,QAAQ;MACRE,qBAAqB;MACrBI,SAAS;MACTO,UAAU;MACVI,YAAY;MACZE;IACJ,CAAE;IAAA,UACGtB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACoB;AAEzC,CAAC;AAAA,IAtEYD,sBAAsB;EAAA,QAGDJ,eAAe,EAEbA,eAAe;AAAA;AAAA,KALtCI,sBAAsB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}